/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './Routes/__root'
import { Route as RouteTreeImport } from './Routes/routeTree'
import { Route as ToDoRoute } from './Routes/about.lazy';

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const ToDoLazyImport = createFileRoute('/ToDo')();

// Create/Update Routes
const ToDoLazyRoute = ToDoLazyImport.update({
  path: '/ToDo',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./Routes/about.lazy').then((d) => d.Route));

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./Routes/about.lazy').then((d) => d.Route))

const RouteTreeRoute = RouteTreeImport.update({
  path: '/routeTree',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./Routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/routeTree': {
      preLoaderRoute: typeof RouteTreeImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/ToDo': {
      preLoaderRoute: typeof ToDoLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  RouteTreeRoute,
  AboutLazyRoute,
  ToDoLazyRoute,
])

/* prettier-ignore-end */
