/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RouteTreeImport } from './routes/routeTree'

// Create Virtual Routes

const TodoLazyImport = createFileRoute('/todo')()
const RickLazyImport = createFileRoute('/rick')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TodoLazyRoute = TodoLazyImport.update({
  path: '/todo',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/todo.lazy').then((d) => d.Route))

const RickLazyRoute = RickLazyImport.update({
  path: '/rick',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/rick.lazy').then((d) => d.Route))

const RouteTreeRoute = RouteTreeImport.update({
  path: '/routeTree',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/routeTree': {
      preLoaderRoute: typeof RouteTreeImport
      parentRoute: typeof rootRoute
    }
    '/rick': {
      preLoaderRoute: typeof RickLazyImport
      parentRoute: typeof rootRoute
    }
    '/todo': {
      preLoaderRoute: typeof TodoLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  RouteTreeRoute,
  RickLazyRoute,
  TodoLazyRoute,
])

/* prettier-ignore-end */
